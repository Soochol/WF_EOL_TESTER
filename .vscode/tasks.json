{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Format: Black (All Files)",
            "type": "shell",
            "command": "python",
            "args": [
                "-m", "black",
                "src/",
                "--config", "pyproject.toml",
                "--preview"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Format: isort (All Files)",
            "type": "shell",
            "command": "python",
            "args": [
                "-m", "isort",
                "src/",
                "--settings-path", "pyproject.toml"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Quality: Full Format Pipeline",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Format: isort (All Files)",
                "Format: Black (All Files)"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            }
        },
        {
            "label": "Lint: Flake8",
            "type": "shell",
            "command": "python",
            "args": [
                "-m", "flake8",
                "src/",
                "--config", "setup.cfg",
                "--statistics"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": {
                "owner": "flake8",
                "fileLocation": "absolute",
                "pattern": {
                    "regexp": "^(.+):(\\d+):(\\d+):\\s+(\\w+\\d+)\\s+(.+)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "code": 4,
                    "message": 5
                }
            }
        },
        {
            "label": "Lint: Pylint",
            "type": "shell",
            "command": "python",
            "args": [
                "-m", "pylint",
                "src/",
                "--rcfile", ".pylintrc",
                "--score=yes"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": {
                "owner": "pylint",
                "fileLocation": "absolute",
                "pattern": {
                    "regexp": "^(.+):(\\d+):(\\d+):\\s+(\\w+):\\s+(.+)\\s+\\((.+)\\)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5,
                    "code": 6
                }
            }
        },
        {
            "label": "Type Check: MyPy",
            "type": "shell",
            "command": "python",
            "args": [
                "-m", "mypy",
                "src/",
                "--config-file", "pyproject.toml"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": {
                "owner": "mypy",
                "fileLocation": "absolute",
                "pattern": {
                    "regexp": "^(.+):(\\d+):(\\d+):\\s+(error|warning|note):\\s+(.+)\\s+\\[(.+)\\]$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5,
                    "code": 6
                }
            }
        },
        {
            "label": "Quality: Full Check Pipeline",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Lint: Flake8",
                "Lint: Pylint",
                "Type Check: MyPy"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            }
        },
        {
            "label": "Test: Current File",
            "type": "shell",
            "command": "python",
            "args": [
                "-m", "pytest",
                "${file}",
                "-v",
                "--tb=short"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": {
                "owner": "pytest",
                "fileLocation": "absolute",
                "pattern": {
                    "regexp": "^(.+):(\\d+):\\s+(.+)$",
                    "file": 1,
                    "line": 2,
                    "message": 3
                }
            }
        },
        {
            "label": "Test: All with Coverage",
            "type": "shell",
            "command": "python",
            "args": [
                "-m", "pytest",
                "tests/",
                "-v",
                "--tb=short",
                "--cov=src",
                "--cov-report=term-missing",
                "--cov-report=html:htmlcov"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": {
                "owner": "pytest",
                "fileLocation": "absolute",
                "pattern": {
                    "regexp": "^(.+):(\\d+):\\s+(.+)$",
                    "file": 1,
                    "line": 2,
                    "message": 3
                }
            }
        },
        {
            "label": "Quality: Complete Pipeline",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Quality: Full Format Pipeline",
                "Quality: Full Check Pipeline",
                "Test: All with Coverage"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "reveal": "always",
                "panel": "new"
            }
        }
    ]
}