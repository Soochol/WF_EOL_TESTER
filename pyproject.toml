[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "wf-eol-tester"
version = "0.1.0"
description = "End-of-Line (EOL) Tester for Wafer Fabrication with Clean Architecture"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "loguru>=0.6.0",
    "asyncio-mqtt>=0.11.0",
    "pyserial>=3.5",
    "pyserial-asyncio>=0.6",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pyyaml>=6.0",
    "rich>=13.0.0",
    "prompt-toolkit>=3.0.38",
    # FastAPI web server dependencies
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    "psutil>=5.9.0",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "flake8>=4.0.0",
    "pylint>=2.15.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
# Core formatting settings
line-length = 100
target-version = ['py310', 'py311']
include = '\.pyi?$'

# Professional formatting options
skip-string-normalization = false
skip-magic-trailing-comma = false
preview = true
enable-unstable-features = []

# String handling and quotes
string-normalization = true
experimental-string-processing = true

# Advanced formatting features
force-exclude = '''
/(
  # Build directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | venv
  | env
  | ENV
  | env.bak
  | venv.bak
  | build
  | dist
  | \.build
  | \.dist-info
  | \.egg-info

  # Generated files
  | migrations
  | _pb2\.py
  | _pb2_grpc\.py

  # Test coverage and reports
  | htmlcov
  | \.coverage
  | coverage\.xml
  | \.pytest_cache

  # IDE and editor directories
  | \.vscode
  | \.idea
  | \.sublime-*
)/
'''

[tool.isort]
# Black compatibility
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# Source code organization
src_paths = ["src", "tests", "scripts"]
skip = ["__pycache__", ".git", ".mypy_cache", ".pytest_cache", "build", "dist"]

# Import classification for clean architecture
known_first_party = [
    "application",
    "domain",
    "infrastructure",
    "ui",
    "driver"
]
known_third_party = [
    "loguru",
    "asyncio",
    "numpy",
    "scipy",
    "yaml",
    "pytest",
    "mypy",
    "serial",
    "mqtt"
]

# Professional import organization
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER"
]

# Advanced sorting and formatting
force_alphabetical_sort_within_sections = true
combine_as_imports = true
split_on_trailing_comma = true
force_single_line = false
single_line_exclusions = []
order_by_type = true
atomic = true
lines_after_imports = 2
lines_between_types = 1

# Comment preservation and handling
comment_prefix = "  #"
honor_noqa = true

# Import length management
wrap_length = 100
balanced_wrapping = true
auto_identify_namespace_packages = true

# Force import structure consistency
force_adds = false
force_sort_within_sections = true
show_diff = false
verbose = false

# Skip files that should not be processed
skip_glob = [
    "**/migrations/*",
    "**/*_pb2.py",
    "**/*_pb2_grpc.py"
]

# Format for different import types
import_heading_future = "Future imports"
import_heading_stdlib = "Standard library imports"
import_heading_thirdparty = "Third-party imports"
import_heading_firstparty = "Local application imports"
import_heading_localfolder = "Local folder imports"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.mypy]
# Python environment
python_version = "3.10"
mypy_path = "src"

# Essential checks only - minimal configuration for bug detection
strict = false
check_untyped_defs = true
warn_unused_configs = true
ignore_missing_imports = true

# Error reporting
show_error_codes = true
show_column_numbers = true
pretty = true

# Performance and caching
cache_dir = ".mypy_cache"
incremental = true

# Minimal per-module configuration
[[tool.mypy.overrides]]
module = [
    "tests.*",
    "conftest",
    "setup"
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "loguru.*",
    "serial.*",
    "asyncio_mqtt.*",
    "numpy.*",
    "scipy.*",
    "yaml.*"
]
ignore_missing_imports = true

[dependency-groups]
dev = [
    "mypy>=1.17.0",
    "pylint>=3.3.7",
]
